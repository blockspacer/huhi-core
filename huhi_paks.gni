# This Source Code Form is subject to the terms of the Huhi Software
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.

import("//huhi/components/huhi_ads/browser/buildflags/buildflags.gni")
import("//huhi/components/huhi_rewards/browser/buildflags/buildflags.gni")
import("//huhi/components/huhi_webtorrent/browser/buildflags/buildflags.gni")
import("//huhi/components/speedreader/buildflags.gni")
import("//build/config/locales.gni")
import("//chrome/common/features.gni")
import("//extensions/buildflags/buildflags.gni")
import("//tools/grit/repack.gni")
import("//ui/base/ui_features.gni")

# Generates a rule to repack a set of resources, substituting a given string
# in for the percentage (e.g. "100", "200"). It generates the repacked files in
# the "gen" directory, and then introduces a copy rule to copy it to the root
# build directory.
#
# Argument:
#   percent [required]
#      String to substitute for the percentage.
template("huhi_repack_percent") {
  percent = invoker.percent

  repack(target_name) {
    forward_variables_from(invoker,
                           [
                             "copy_data_to_bundle",
                             "repack_whitelist",
                             "visibility",
                           ])

    # All sources should also have deps for completeness.
    sources = [
      "$root_gen_dir/huhi/huhi_theme_resources_${percent}_percent.pak",
    ]

    deps = [
      "//huhi/app/theme:huhi_theme_resources",
    ]

    if (defined(invoker.deps)) {
      deps += invoker.deps
    }

    output = "${invoker.output_dir}/huhi_${percent}_percent.pak"
  }
}

template("huhi_extra_paks") {
  repack(target_name) {
    forward_variables_from(invoker,
                           [
                             "copy_data_to_bundle",
                             "repack_whitelist",
                             "visibility",
                           ])
    output = "${invoker.output_dir}/huhi_resources.pak"
    sources = [
      "$root_gen_dir/components/huhi_components_resources.pak",
      "$root_gen_dir/huhi/ui/webui/resources/huhi_webui_resources.pak",
    ]

    if (!is_android) {
      sources += [
        "$root_gen_dir/huhi/huhi_generated_resources.pak",
        "$root_gen_dir/huhi/huhi_unscaled_resources.pak",
        "$root_gen_dir/huhi/browser/resources/settings/huhi_settings_resources.pak",
      ]
    }

    deps = [
      "//huhi/components/resources",
      "//huhi/ui/webui/resources",
    ]

    if (!is_android) {
      deps += [
        "//huhi/app:huhi_generated_resources_grit",
        "//huhi/app/theme:huhi_unscaled_resources",
        "//huhi/components/resources:strings",
        "//huhi/browser/resources/settings:resources",
      ]
    }

    if (huhi_ads_enabled) {
      sources += [
        "$root_gen_dir/huhi/components/huhi_ads/resources/huhi_ads_resources.pak",
      ]

      deps += [
        "//huhi/components/huhi_ads/resources",
      ]
    }

    if (huhi_rewards_enabled) {
      sources += [
        "$root_gen_dir/huhi/components/huhi_rewards/resources/huhi_rewards_resources.pak",
      ]

      deps += [
        "//huhi/components/huhi_rewards/resources",
      ]
    }

    if (enable_huhi_webtorrent) {
      sources += [
        "$root_gen_dir/huhi/components/huhi_webtorrent/huhi_webtorrent_resources.pak",
      ]

      deps += [
        "//huhi/components/huhi_webtorrent:resources",
      ]
    }

    if (enable_extensions) {
      sources += [
        "$root_gen_dir/huhi/browser/resources/extensions/huhi_extensions_resources.pak",
        "$root_gen_dir/huhi/components/huhi_extension/huhi_extension_resources.pak",
      ]

      deps += [
        "//huhi/browser/resources/extensions:resources",
        "//huhi/common/extensions/api",
        "//huhi/components/huhi_extension:resources",
      ]
    }

    if (huhi_rewards_enabled) {
      if (enable_extensions) {
        sources += [
          "$root_gen_dir/huhi/components/huhi_rewards/resources/extension/huhi_rewards_extension_resources.pak",
        ]

        deps += [
          "//huhi/components/huhi_rewards/resources/extension:resources",
        ]
      }
    }

    if (defined(invoker.deps)) {
      deps += invoker.deps
    }
    if (defined(invoker.additional_paks)) {
      sources += invoker.additional_paks
    }
  }
}

# Defines repack() targets used by Huhi. Specifically:
# * huhi_100_percent.pak
# * huhi_200_percent.pak (optionally)
# * resources.pak
#
# Paramters:
#   output_dir [required]: Directory to output .pak files.
#   additional_extra_paks: List of extra .pak sources for resources.pak.
#   locale_whitelist: if set, override repack_whitelist for locale .pak files.
#   copy_data_to_bundle:
#   deps:
#   output_dir:
#   public_deps:
#   repack_whitelist:
#   visibility:
#     Normal meanings.
#
template("huhi_paks") {
  huhi_repack_percent("${target_name}_100_percent") {
    percent = "100"
    forward_variables_from(invoker,
                           [
                             "copy_data_to_bundle",
                             "deps",
                             "output_dir",
                             "repack_whitelist",
                             "visibility",
                           ])
  }

  if (enable_hidpi) {
    huhi_repack_percent("${target_name}_200_percent") {
      percent = "200"
      forward_variables_from(invoker,
                             [
                               "copy_data_to_bundle",
                               "deps",
                               "output_dir",
                               "repack_whitelist",
                               "visibility",
                             ])
    }
  }

  huhi_extra_paks("${target_name}_extra") {
    forward_variables_from(invoker,
                           [
                             "copy_data_to_bundle",
                             "deps",
                             "output_dir",
                             "repack_whitelist",
                             "visibility",
                           ])
    if (defined(invoker.additional_extra_paks)) {
      additional_paks = invoker.additional_extra_paks
    }
  }

  group(target_name) {
    forward_variables_from(invoker, [ "deps" ])
    public_deps = [
      ":${target_name}_100_percent",
      ":${target_name}_extra",
    ]
    if (enable_hidpi) {
      public_deps += [ ":${target_name}_200_percent" ]
    }
    if (defined(invoker.public_deps)) {
      public_deps += invoker.public_deps
    }
  }
}
