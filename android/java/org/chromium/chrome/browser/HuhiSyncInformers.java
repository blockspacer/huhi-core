/* Copyright (c) 2020 The Huhi Software Authors. All rights reserved.
 * This Source Code Form is subject to the terms of the Huhi Software
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

package org.chromium.chrome.browser;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;

import org.chromium.base.ContextUtils;
import org.chromium.base.ApplicationStatus;
import org.chromium.base.Log;
import org.chromium.chrome.R;
import org.chromium.chrome.browser.HuhiSyncWorker;
import org.chromium.chrome.browser.app.HuhiActivity;
import org.chromium.chrome.browser.infobar.InfoBarIdentifier;
import org.chromium.chrome.browser.preferences.HuhiPrefServiceBridge;
import org.chromium.chrome.browser.settings.HuhiSyncScreensPreference;
import org.chromium.chrome.browser.settings.SettingsLauncher;
import org.chromium.chrome.browser.settings.SettingsLauncherImpl;
import org.chromium.chrome.browser.sync.ProfileSyncService;
import org.chromium.chrome.browser.tab.Tab;
import org.chromium.chrome.browser.ui.messages.infobar.HuhiSimpleConfirmInfoBarBuilder;
import org.chromium.chrome.browser.ui.messages.infobar.SimpleConfirmInfoBarBuilder;

public class HuhiSyncInformers {
    public static void show() {
        showSetupV2IfRequired();
    }

    private static void showSetupV2IfRequired() {
        if (null == HuhiSyncReflectionUtils.getSyncWorker()) return;

        HuhiSyncWorker huhiSyncWorker = (HuhiSyncWorker)HuhiSyncReflectionUtils.getSyncWorker();
        boolean wasV1User = huhiSyncWorker.getSyncV1WasEnabled();
        if (!wasV1User) {
            return;
        }

        boolean infobarDismissed = huhiSyncWorker.getSyncV2MigrateNoticeDismissed();
        if (infobarDismissed) {
            return;
        }

        boolean isV2User = ProfileSyncService.get() != null && ProfileSyncService.get().isFirstSetupComplete();
        if (isV2User) {
            huhiSyncWorker.setSyncV2MigrateNoticeDismissed(true);
            return;
        }

        showSyncV2NeedsSetup();
    }

    public static void showSyncV2NeedsSetup() {
        HuhiActivity activity = HuhiActivity.getHuhiActivity();
        if (activity == null) return;

        Tab tab = activity.getActivityTabProvider().get();
        if (tab == null) return;

        HuhiSimpleConfirmInfoBarBuilder.createInfobarWithDrawable(tab.getWebContents(),
                new SimpleConfirmInfoBarBuilder.Listener() {
                    @Override
                    public void onInfoBarDismissed() {
                    }

                    @Override
                    public boolean onInfoBarButtonClicked(boolean isPrimary) {
                        if (isPrimary) {
                            SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
                            settingsLauncher.launchSettingsActivity(
                                ContextUtils.getApplicationContext(),
                                HuhiSyncScreensPreference.class);
                        }
                        return false;
                    }

                    @Override
                    public boolean onInfoBarLinkClicked() {
                        return false;
                    }
                },
                // must be SYNC_V2_MIGRATE_INFOBAR_DELEGATE, but now it is introduced through
                // src/huhi/chromium_src/components/infobars/core/infobar_delegate.h and
                // java enums are generated by //components/infobars/core:infobar_generated_enums
                // who does not understand `huhi/chromium_src`
                InfoBarIdentifier.INLINE_UPDATE_READY_INFOBAR_ANDROID,
                activity,
                R.drawable.sync_icon /* drawableId */,
                activity.getString(R.string.huhi_sync_v2_migrate_infobar_message) /* message */,
                activity.getString(R.string.huhi_sync_v2_migrate_infobar_command) /* primaryText */,
                null /* secondaryText */, null /* linkText */, false /* autoExpire */);
        HuhiSyncWorker huhiSyncWorker = (HuhiSyncWorker)HuhiSyncReflectionUtils.getSyncWorker();
        huhiSyncWorker.setSyncV2MigrateNoticeDismissed(true);
    }
}
